//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Default_Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Default_Inputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Default_Inputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Default_Inputs"",
    ""maps"": [
        {
            ""name"": ""P1"",
            ""id"": ""250adda6-8449-4258-b5d2-170d3de3a536"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""93e41774-33b8-43bb-9f40-f548ae1d3f92"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""0d4df0f9-e41a-4a5d-ac42-fdd9746f2ff2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6ad4459a-c643-44eb-adc7-b28dad39ff3f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""b8b4247c-3e9f-4c6a-bba1-443d2a0c59a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Heal potion"",
                    ""type"": ""Button"",
                    ""id"": ""ef84bfe3-f5e1-488e-8172-a5a064eb4a2a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Fire potion"",
                    ""type"": ""Button"",
                    ""id"": ""acd1e695-e7d6-4c09-8db8-4a4e975d342d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ice potion"",
                    ""type"": ""Button"",
                    ""id"": ""6736c600-08a7-48e0-b8d8-10644303126b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""baa2fa81-f3b8-489c-b105-62a02ded381a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d8f6fc1a-3a07-428c-8e4e-652df47ca2fd"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": ""Hold"",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D [Gamepad]"",
                    ""id"": ""7a1d903e-eddc-43de-9ce5-985f6dea1a52"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e7673dff-7b3d-4cd1-8ff8-4f0c0ad9d38c"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""150f3cb7-fa87-4a74-a1f5-a82060795a28"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1392cafe-6b4a-4140-95ba-de9943326f66"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""46029069-bb96-4ad8-95d4-854472a4d5d5"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D [Keyboard]"",
                    ""id"": ""9fd6441a-e5fa-41c0-a6c6-ec634cef34bb"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bf431df6-6d8b-4b18-aa55-5755444a7cda"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8ebf23b9-d19c-4ecf-96ea-b42cdfc33655"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""37000772-4d44-4708-a7ce-4afca3a93bf2"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3ba6729f-b4de-446c-89dd-50887cfed78a"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1b4a6fdc-0019-4f44-8c7d-739dfe21c39d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""959f7440-6011-48ce-b7a4-7da112d52c3f"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81c09917-3863-4161-9758-fa399078f05d"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""90632255-480a-4d7a-a572-508eaf82f51c"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab0cbfcf-9f3f-493e-b26f-dee0208425d1"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45d46b9a-8889-4c40-97e5-334d933c8fa2"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2322c9b-fb84-4696-a801-8b7764edb0ef"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal potion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5023ddd-6cf1-46ff-bce7-f3cd69da1fb4"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal potion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40b5d841-5cdf-4f68-a972-3d3fbf9f0f6a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire potion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ce80403-8a11-4f94-90cb-f54b7f693a3a"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire potion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5cc3d60-9919-47e6-a515-52680dc4ecb3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ice potion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9eea13f8-a36c-4e3e-bc25-c5f0fa65ab0c"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ice potion"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2f74a7e-af00-4e21-8403-d71adf3dbf4f"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ea53149-eac1-4b84-8b97-736545c998be"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e2babc9-9f8d-49f2-a66d-bd81afdfc279"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""f30819d5-b545-47e6-9149-16346d71a4ec"",
            ""actions"": [
                {
                    ""name"": ""StartGamepad"",
                    ""type"": ""Value"",
                    ""id"": ""d01f9171-bb31-4769-a037-fa9308b20e0a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""StartKeyboard"",
                    ""type"": ""Button"",
                    ""id"": ""2e03e7d6-d7da-4658-b353-f6c1572c9613"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D [Gamepad]"",
                    ""id"": ""f5a0249f-3031-440a-a40f-c60ad3e5b356"",
                    ""path"": ""2DVector"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartGamepad"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""63487530-32fc-495c-8bb6-e4b18047aedc"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1fd46a85-90eb-4bbe-90c6-94d3765001d7"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""cf40988c-c89e-4981-9a7c-38c546759c8e"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""601f041e-fb29-42b3-802a-7f05c5c74288"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartGamepad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2f819ea6-73ad-4087-ab75-e6dcc911a9b6"",
                    ""path"": ""<Keyboard>/anyKey"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StartKeyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // P1
        m_P1 = asset.FindActionMap("P1", throwIfNotFound: true);
        m_P1_Move = m_P1.FindAction("Move", throwIfNotFound: true);
        m_P1_Jump = m_P1.FindAction("Jump", throwIfNotFound: true);
        m_P1_Attack = m_P1.FindAction("Attack", throwIfNotFound: true);
        m_P1_Interaction = m_P1.FindAction("Interaction", throwIfNotFound: true);
        m_P1_Healpotion = m_P1.FindAction("Heal potion", throwIfNotFound: true);
        m_P1_Firepotion = m_P1.FindAction("Fire potion", throwIfNotFound: true);
        m_P1_Icepotion = m_P1.FindAction("Ice potion", throwIfNotFound: true);
        m_P1_Pause = m_P1.FindAction("Pause", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_StartGamepad = m_UI.FindAction("StartGamepad", throwIfNotFound: true);
        m_UI_StartKeyboard = m_UI.FindAction("StartKeyboard", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // P1
    private readonly InputActionMap m_P1;
    private List<IP1Actions> m_P1ActionsCallbackInterfaces = new List<IP1Actions>();
    private readonly InputAction m_P1_Move;
    private readonly InputAction m_P1_Jump;
    private readonly InputAction m_P1_Attack;
    private readonly InputAction m_P1_Interaction;
    private readonly InputAction m_P1_Healpotion;
    private readonly InputAction m_P1_Firepotion;
    private readonly InputAction m_P1_Icepotion;
    private readonly InputAction m_P1_Pause;
    public struct P1Actions
    {
        private @Default_Inputs m_Wrapper;
        public P1Actions(@Default_Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_P1_Move;
        public InputAction @Jump => m_Wrapper.m_P1_Jump;
        public InputAction @Attack => m_Wrapper.m_P1_Attack;
        public InputAction @Interaction => m_Wrapper.m_P1_Interaction;
        public InputAction @Healpotion => m_Wrapper.m_P1_Healpotion;
        public InputAction @Firepotion => m_Wrapper.m_P1_Firepotion;
        public InputAction @Icepotion => m_Wrapper.m_P1_Icepotion;
        public InputAction @Pause => m_Wrapper.m_P1_Pause;
        public InputActionMap Get() { return m_Wrapper.m_P1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(P1Actions set) { return set.Get(); }
        public void AddCallbacks(IP1Actions instance)
        {
            if (instance == null || m_Wrapper.m_P1ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_P1ActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
            @Healpotion.started += instance.OnHealpotion;
            @Healpotion.performed += instance.OnHealpotion;
            @Healpotion.canceled += instance.OnHealpotion;
            @Firepotion.started += instance.OnFirepotion;
            @Firepotion.performed += instance.OnFirepotion;
            @Firepotion.canceled += instance.OnFirepotion;
            @Icepotion.started += instance.OnIcepotion;
            @Icepotion.performed += instance.OnIcepotion;
            @Icepotion.canceled += instance.OnIcepotion;
            @Pause.started += instance.OnPause;
            @Pause.performed += instance.OnPause;
            @Pause.canceled += instance.OnPause;
        }

        private void UnregisterCallbacks(IP1Actions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
            @Healpotion.started -= instance.OnHealpotion;
            @Healpotion.performed -= instance.OnHealpotion;
            @Healpotion.canceled -= instance.OnHealpotion;
            @Firepotion.started -= instance.OnFirepotion;
            @Firepotion.performed -= instance.OnFirepotion;
            @Firepotion.canceled -= instance.OnFirepotion;
            @Icepotion.started -= instance.OnIcepotion;
            @Icepotion.performed -= instance.OnIcepotion;
            @Icepotion.canceled -= instance.OnIcepotion;
            @Pause.started -= instance.OnPause;
            @Pause.performed -= instance.OnPause;
            @Pause.canceled -= instance.OnPause;
        }

        public void RemoveCallbacks(IP1Actions instance)
        {
            if (m_Wrapper.m_P1ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IP1Actions instance)
        {
            foreach (var item in m_Wrapper.m_P1ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_P1ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public P1Actions @P1 => new P1Actions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_StartGamepad;
    private readonly InputAction m_UI_StartKeyboard;
    public struct UIActions
    {
        private @Default_Inputs m_Wrapper;
        public UIActions(@Default_Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @StartGamepad => m_Wrapper.m_UI_StartGamepad;
        public InputAction @StartKeyboard => m_Wrapper.m_UI_StartKeyboard;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @StartGamepad.started += instance.OnStartGamepad;
            @StartGamepad.performed += instance.OnStartGamepad;
            @StartGamepad.canceled += instance.OnStartGamepad;
            @StartKeyboard.started += instance.OnStartKeyboard;
            @StartKeyboard.performed += instance.OnStartKeyboard;
            @StartKeyboard.canceled += instance.OnStartKeyboard;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @StartGamepad.started -= instance.OnStartGamepad;
            @StartGamepad.performed -= instance.OnStartGamepad;
            @StartGamepad.canceled -= instance.OnStartGamepad;
            @StartKeyboard.started -= instance.OnStartKeyboard;
            @StartKeyboard.performed -= instance.OnStartKeyboard;
            @StartKeyboard.canceled -= instance.OnStartKeyboard;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IP1Actions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnHealpotion(InputAction.CallbackContext context);
        void OnFirepotion(InputAction.CallbackContext context);
        void OnIcepotion(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnStartGamepad(InputAction.CallbackContext context);
        void OnStartKeyboard(InputAction.CallbackContext context);
    }
}
